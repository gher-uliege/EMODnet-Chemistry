#!/usr/bin/env julia
using Dates
using Printf
using NCDatasets
using DIVAnd
using Glob

const doiprefix = "https://doi.org/10.13120/" #
include("common.jl")
year0 = yearlist[1][1]
year1 = yearlist[1][end]

cdilist = joinpath(datadir, "export.zip")
if !isfile(cdilist)
	download("https://emodnet-chemistry.maris.nl/download/export.zip", cdilist)
end

hostname = gethostname()
if hostname == "ogs04"
	@info "Working in production server"
	databasedir = "/production/apache/data/emodnet-projects/v2023/" # To change
elseif hostname == "GHER-ULg-Laptop"
	databasedir = "/data/EMODnet/Chemistry/prod/" # To change
elseif (hostname == "FSC-PHYS-GHER01") || (hostname == "ctroupin-PRIME-A320M-C-R2-0")
	datadir = "/home/ctroupin/data/EMODnet-Chemistry/Eutrophication2024/Results/Monthly"
else
	@error("Unknown host")
end

# Generate list of data files
datafilelist = Glob.glob("*monthly.nc", datadir)

for datafile in datafilelist

	# Extract the variable name
	@info("Working on file $(datafile)")
	ds = NCDataset(datafile, "r")
	varname = first(keys(ds))
	@info("Variable name: ")
	close(ds)

	# XML file to be written in the same directory as the results
	newfilename = replace(datafile, "_monthly" => "", " " => "_")
	xmlname = joinpath(datadir, "$(varname).xml")
	@info(xmlname)

    # Check if "deepest" variables exist, other create them
    NCDataset(datafile, "r") do ds
        if occursin("deepest", last(keys(ds)))
            @info("Deepest variables already there")
        else
            DIVAnd.derived(datafile, varname, newfilename)
        end
    end

	titlestr = "European seas - DIVAnd 4D monthly analysis of $varname $year0/$year1 v2024"
	NCDataset(datafile, "a") do ds
        doisuffix = ds.attrib["product_id"]
        newdoi = joinpath(doiprefix, doisuffix)
        
        @info("New DOI = $(newdoi)")
		ds.attrib["title"] = titlestr
        ds.attrib["doi"] = newdoi
        ds.attrib["Conventions"] = "CF-1.12" ;
        ds.attrib["source"] = "Observational data from SeaDataNet/EMODnet Chemistry Data Network" ;
        ds.attrib["bathymetry_source"] = "The GEBCO 30sec Digital Atlas published by the British Oceanographic Data Centre on behalf of IOC and IHO, 2003" 
        ds.attrib["bathymetry_source"] = "GEBCO Compilation Group (2020) GEBCO 2020 Grid (doi:10.5285/a29c5465-b138-234d-e053-6c86abc040b9)"
        ds.attrib["Acknowledgements"] = "Aggregated data products are generated by EMODnet Chemistry under the support of DG MARE Call for Tenders EASME/EMFF/2016/006-lot4, EASME/2019/OP/0003-lot4." ;
        ds.attrib["project"] = "EMODnet Chemistry - Phase 5" ;
        ds.attrib["citation"] = "Usage is subject to mandatory citation: \"This resource was generated in the framework of EMODnet Chemistry, under the support of DG MARE Call for Tender EASME/EMFF/2020/3.1.11/European Marine Observation and Data Network (EMODnet) - Lot 5 - Chemistry\""
        ds.attrib["DIVAnd_source"] = "https://github.com/gher-uliege/DIVAnd.jl" ;
		ds.attrib["DIVAnd_version"] = "2.7.12" ;
		ds.attrib["DIVAnd_code_doi"] = "https://doi.org/10.5281/zenodo.1303229" ;
        ds.attrib["DIVAnd_reference"] = "Barth, A.; Beckers, J.-M.; Troupin, C.; Alvera-Azcarate, A. & Vandenbulcke, L. divand-1.0: n-dimensional variational data analysis for ocean observations. Geoscientific Model Development, 2014, 7, 225-241. DOI:10.5194/gmd-7-225-2014" ;
	end

	files = [newfilename]

	url_path = "All_European_Seas"

	absstr = """
$varname - Monthly Climatology for the European Seas for the period $(TSbackground.yearlists[1][1])-$(TSbackground.yearlists[1][end]) on the domain from longitude $(lonr[1]) to $(lonr[end]) degrees East and latitude $(latr[1]) to $(latr[end]) degrees North.
Data Sources: observational data from SeaDataNet/EMODnet Chemistry Data Network.
Description of DIVA analysis: The computation was done with the DIVAnd (Data-Interpolating Variational Analysis in n dimensions), version 2.7.12, using GEBCO 30sec topography for the spatial connectivity of water masses. Horizontal correlation length and vertical correlation length vary spatially depending on the topography and domain.
Depth range: $(join(string.(depthr),", ")) m.
Units: $(varinfo[varname]["netcdf_units"]).
The horizontal resolution of the produced DIVAnd analysis is $(step(lonr)) degrees."""


	cd(dirname(datafile)) do
		DIVAnd.divadoxml(
			basename.(files), varname, "EMODNET-chemistry", cdilist, xmlname;
			ignore_errors = true,
			additionalvars = Dict(
				"abstract" => absstr,
			),
			url_path = url_path,
			WMSexclude = ["obsid"],
		)
	end

end
